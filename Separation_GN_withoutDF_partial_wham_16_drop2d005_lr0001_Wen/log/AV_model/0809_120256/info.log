2022-08-09 12:02:57,293 - test - INFO - SeparationModel(
  (am_to_db): AmplitudeToDB()
  (spec_input): InputSpec(
    (spec): Spectrogram()
  )
  (TCN): TCN(
    (LN): GroupNorm(1, 257, eps=1e-08, affine=True)
    (BN): Conv1d(257, 256, kernel_size=(1,), stride=(1,))
    (TCN): ModuleList(
      (0): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(1,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (1): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (2): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (3): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(8,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (4): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(16,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (5): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(32,), dilation=(32,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (6): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(64,), dilation=(64,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (7): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(128,), dilation=(128,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (8): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(1,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (9): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (10): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (11): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(8,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (12): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(16,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (13): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(32,), dilation=(32,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (14): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(64,), dilation=(64,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (15): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(128,), dilation=(128,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (16): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(1,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (17): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (18): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (19): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(8,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (20): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(16,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (21): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(32,), dilation=(32,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (22): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(64,), dilation=(64,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
      (23): DepthConv1d(
        (conv1d): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
        (dconv1d): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(128,), dilation=(128,), groups=256)
        (res_out): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
        (nonlinearity1): PReLU(num_parameters=1)
        (nonlinearity2): PReLU(num_parameters=1)
        (drop1): Dropout2d(p=0.05, inplace=False)
        (drop2): Dropout2d(p=0.05, inplace=False)
        (reg1): GroupNorm(1, 256, eps=1e-08, affine=True)
        (reg2): GroupNorm(1, 512, eps=1e-08, affine=True)
      )
    )
    (output): Sequential(
      (0): PReLU(num_parameters=1)
      (1): GroupNorm(1, 256, eps=1e-05, affine=True)
      (2): Conv1d(256, 514, kernel_size=(1,), stride=(1,))
    )
  )
  (spec_output): Spectrogram()
  (to_spec): Conv1d(256, 514, kernel_size=(1,), stride=(1,))
  (csd_model): CSD(
    (am_to_db): AmplitudeToDB()
    (later_norm): GroupNorm(1, 257, eps=1e-08, affine=True)
    (block1): Sequential(
      (conv1_1): Conv1d(257, 257, kernel_size=(5,), stride=(1,), padding=(2,))
      (prelu_1): PReLU(num_parameters=1)
      (LN_1): GroupNorm(1, 257, eps=1e-08, affine=True)
    )
    (block2): Sequential(
      (conv1_2): Conv1d(257, 64, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,))
      (prelu_2): PReLU(num_parameters=1)
      (LN_2): GroupNorm(1, 64, eps=1e-08, affine=True)
    )
    (block3): Sequential(
      (conv1_3): Conv1d(64, 16, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,))
      (prelu_3): PReLU(num_parameters=1)
      (LN_3): GroupNorm(1, 16, eps=1e-08, affine=True)
    )
    (block4): Sequential(
      (conv1_4): Conv1d(16, 8, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(8,))
      (prelu_4): PReLU(num_parameters=1)
      (LN_4): GroupNorm(1, 8, eps=1e-08, affine=True)
    )
    (output_layer): Sequential(
      (out_conv1): Conv1d(8, 3, kernel_size=(3,), stride=(1,), padding=(1,))
      (out_prelu_4): PReLU(num_parameters=1)
    )
  )
  (vad): VAD(
    (common): Sequential(
      (conv1_1): Conv1d(514, 257, kernel_size=(5,), stride=(1,), padding=(2,))
      (relu_1): ReLU()
      (BN_1): GroupNorm(1, 257, eps=1e-08, affine=True)
    )
    (vad_branch): Sequential(
      (conv1_vad_branch): Conv1d(257, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (relu_1_): ReLU()
      (BN_2): GroupNorm(1, 32, eps=1e-08, affine=True)
      (conv1_3): Conv1d(32, 8, kernel_size=(3,), stride=(1,), padding=(1,))
      (relu_3): ReLU()
    )
    (output_layer_vad): ModuleList(
      (0): Conv1d(8, 1, kernel_size=(3,), stride=(1,), padding=(1,))
      (1): Conv1d(8, 1, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (sigmoid): Sigmoid()
  )
  (inv_spec): InverseSpectrogram()
  (m): Sigmoid()
  (softmax): Softmax(dim=1)
)
2022-08-09 12:03:03,176 - test - INFO - Loading checkpoint: /dsi/gannot-lab/datasets/mordehay/Result/Separation_GN_withoutDF_partial_wham_16_drop2d005_lr0001_Wen/models/AV_model/0718_225115/model_best.pth ...
